const g=(l,o)=>{if(!l||l.length===0)return o.map(t=>t.key).join(",");const c=o.map(t=>t.key),a=[];a.push(c.map(t=>`"${t.replace(/"/g,'""')}"`).join(","));for(const t of l){const r=o.map(p=>{let e=t[p.key];if(e==null)return"";if(p.type==="date"&&e){const s=new Date(e);isNaN(s.getTime())?e="":e=s.toISOString().split("T")[0]}else p.type==="boolean"&&(e=e?"true":"false");return`"${String(e).replace(/"/g,'""')}"`}).join(",");a.push(r)}return a.join(`
`)},h=(l,o)=>{const c=l.split(/\r?\n/).filter(r=>r.trim()!=="");if(c.length<2)return[];const a=o.map(r=>r.key),t=[];for(let r=1;r<c.length;r++){const e=c[r].match(/(?:\"(?:[^"]|\"\")*\"|[^,])+/g);if(!e)continue;const s={};for(let u=0;u<a.length&&u<e.length;u++){let n=e[u].trim();n.startsWith('"')&&n.endsWith('"')&&(n=n.substring(1,n.length-1).replace(/\"\"/g,'"'));const i=o.find(f=>f.key===a[u]);if(i)switch(i.type){case"number":s[i.key]=parseFloat(n)||null;break;case"boolean":s[i.key]=n.toLowerCase()==="true";break;case"date":s[i.key]=n?new Date(n).toISOString().split("T")[0]:null;break;default:s[i.key]=n}}t.push(s)}return t};export{h as f,g as t};
